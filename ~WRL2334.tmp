# controle_de_vendas
Controle de Vendas

Commit 04
Novo pacote model e sql, no pacote model nova classe Clientes e encapsulando atributos com seus geeter e setters, no pacote sql 
adicionando novo banco de dados com nome de "projeto" e adicionando nova tabela de Clientes com seus elementos

Commit 05 
Criando um novo pacote br.com.projeto.jdbc, a dentro método Connection getConnection classe responsável para a conexão com o banco de dados

Commit 06 Testando a conexão com o banco de dados
Nova classe TesteConexao, classe responsável para testar a nossa conexão
Caso não conecte erro exception mostrado em um MessageDialog

Commit 07 Método Cadastrar Cliente
Novo pacote br.com.projeto.dao, nova classe ClientesDAO, criar construtor
Para conexão com o banco de dados assim toda vez que chamar a conexão com o banco de dados será executada, apenas fecharar a conexão após ser inserido dados e atualizado os dados dos Clientes

Commit 08 Formatando RG, CPF, Cel, Tel e CEP
Modificando o Campo de texto para Campo formatado dos itens acima, em propriedade item selecionado em formatterFactory selecione máscara e segue abaixo formatações:
Cpf: ###.###.###-##
Rg: ##.###.###-##
Cel: (##) # ####-####
Tel: (##) ####-####
Cep: ## ###-###

Commit 09 Implementando Método Cadastrar Cliente
Iremos para a classe FrmClientes, em btnSalvar vamos adicionar novo envento ActionPerformed, assim que clicado ele executarar, nesse evento
Instanciaremos a classe Clientes ela será nosso obj, exemplo: obj.setNome(txtNome.getText(); isso para uma String, para Int
Obj.setNumero(Integer.parseInt(txtNumero.getText)); agora para um Cbox
Obj.setUf(cboUf.getSelectedItem().toString());

Após todos os dados inseridos instanciaremos nosso ClienteDAO, para acessar nosso método cadastrar e em parâmetros ele receberar o obj
cliente

Commit 10 Criando método listar Clientes
Na classe ClientesDAO novo método public de uma lista de Clientes, a dentro desse método instanciaremos uma lista de Clientes isso dentro de um try e catch, após comando sql para selecionar elementos, preparando a conexão,  e fazendo a filtragem com ResultSet, estrutura enquando a filtragem encontrar dados na tabela de dados, obj receberar dados, esse dados será adicionado a nossa ArrayList criado no ínicio, após chaves return a uma lista e em catch return null

Commit 11 Implementando método listar Clientes
Usaremos o DefaultTableModel, não entraremos muito em detalhes, mais seria bom pesquisar sobre ele, por não ser indicado por muitos, mais no nosso caso por enquanto ele nos suprime.
Na classe FrmClientes, novo método public void listar, instanciaremos nosso ClietesDAO dao, criaremos uma List de Clientes, nossa lista ela receberar o nosso método listarClientes, abaixo chamaremos o DefaultTableModel dados ele será igual a nossa (DefaultTableModel)tblClientes.getModel(); assim modificando lá, limparemos a tabela dados.setNumRow que receberar zero, vamos percorrer a nossa lista com o for Clientes c : lista, a dentro dados.addRow um novo object[]{}); dentro das chaves do novo object
c.getId(), c.getNome(), etc ... Após em projeto selecione JFrame e adicione novo evento WindowsActived, e chama o método listar, esse evento ele executarar ao abrir o sistema

Commit 12 Commit anterior, Alterar e Excluir Cliente

Criação de 2 métodos muito idêntico ao que já vimos, apenas mudará o código sql, em excluir apenas setaremos o id, já em alterar teremos que setar todos e mais o id no final que será nossa coluna 14 dos itens.


Commit 13 Setando Tabela Cliente aos campos Vazios

Antes de editar e excluir vamos setar os dados para os campos em brancos para facilitar as alterações, cada elemento é um número, por exemplo o id
é representado pelo número 0, o nome é representado pelo número 1, e assim por diante, o exemplo é esse: txtId.setText(tbCliente.getValueAt(tblClientes.getSelectedRow(),0).toString());
O meu obj txtId, como faço que pra ele sete na tabela pelaa linha, o elemento 0 seria nosso id convertido para uma String, assim mostrando no campo em branco, dica o combobox em vez de setText, ele fica setSelectedItem, antes dos códigos pode se colocar também o código que ao clicar ele vai até a minha  tabela de cadastro de Clientes já preenchido com os dados para assim ficar mais prático para fazer as alterações, segue como fazer, copie o nome do Painel: jTabbedPane1.setSelectedIndex(0); isso irar para o painel 0, assim que selecionar e clicar

15 Implementando métodos Alterar e Excluir Clientes

Na classe FrmClintes adicione novos eventos para os botões Alterar e Excluir, em excluir é só setar todos os objetos, no meu caso o meu Id ele
é auto_increment não é necessário setarTexto, já no botão Excluir temos que chamar o obj id por que ele é a nossa referência


